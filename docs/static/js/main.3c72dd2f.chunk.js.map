{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifSearcherApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifSearcherApp","categories","idx","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,MAMlB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAnBkB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAGbC,EAHa,iDAGoCC,UAAUH,GAH9C,+DAIDI,MAAMF,GAJL,cAIbG,EAJa,gBAMEA,EAAIC,OANN,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBZM,GAhBY,4CAAH,sDCAPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAE/BqB,KAAK,GACLa,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAjBAC,qBAAW,WAEPxB,EAAQC,GACPwB,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAGlB,CAACpB,IAQGqB,EDvBwBI,CAAazB,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAGpB,OACI,qCACI,6BAAKpB,IACJoB,GAAW,2CACZ,qBAAKJ,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEdxBe,EAAiB,WAI1B,MAAoCxC,mBAAS,CAAC,eAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAEA,OACI,qCACI,kDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BACM0C,EAAWlB,KAAK,SAACT,EAAU4B,GAAX,OACd,cAAC,EAAD,CAEI5B,SAAUA,GADLA,Y,MChB7B6B,IAASC,OAEL,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.3c72dd2f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n    \r\n    const handleInputChange = (e) =>{\r\n\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cat => [inputValue, ...cat]);\r\n            setInputValue('')\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n                    \r\n          />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=FUEqQlAONP8UfI7P41Jz9Vz3NbbM4AEW`;\r\n    const res = await fetch(url);\r\n\r\n    const {data} = await res.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    \r\n    // console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>        \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    // getGifs()\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading...</p>}\r\n            <div className='card-grid'> \r\n            \r\n                {\r\n                    images.map( img => \r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    )\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    //efectos no pueden ser async\r\n    useEffect( () => {\r\n        \r\n        getGifs(category)\r\n        .then(img => {\r\n            setState({\r\n                data: img,\r\n                loading: false\r\n            });\r\n        })\r\n    }, [category]);\r\n\r\n    /* setTimeout(() => {\r\n       setState({\r\n           data: [1,2,3,4,5],\r\n           loading: false\r\n       });\r\n    }, 2500); */\r\n    return state;\r\n\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\n\r\nexport const GifSearcherApp = () => {\r\n\r\n    // const categories = ['Evangelion', 'Fullmetal Alchemist', 'Rurouni Kenshin'];\r\n\r\n    const [categories, setCategories] = useState(['Evangelion'])\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Searcher App</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            \r\n\r\n            <ol>\r\n                { categories.map( (category, idx) => \r\n                    <GifGrid \r\n                        key={category}\r\n                        category={category}\r\n                    />\r\n                )}\r\n            </ol>  \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifSearcherApp } from './GifSearcherApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifSearcherApp />,\n\n    document.getElementById('root')\n);\n"],"sourceRoot":""}